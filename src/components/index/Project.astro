---
import Icon from '../Icon.astro';
import type { Project } from '../../scripts/types';

interface Props {
    project: Project;
}

const { project } = Astro.props;
const { name, link, description, authors, timeline, technologies, previewImage, left, right } = project;
const inlineStyle = `
    ${left ? `align-self: flex-start; margin-left: ${left}%;` : ''}
    ${right ? `align-self: flex-end; margin-right: ${right}%;` : ''}
`;
---

<div
    class="project-card"
    style={inlineStyle}
>
    <a
        href={`https://${link}`}
        class="project-link"
        target="_blank"
    >
        <h2>{name}</h2>
        <p>
            {link}
            <Icon
                name={'external-link'}
                size={14}
            />
        </p>
    </a>
    <p class="description">{description}</p>
    <div>
        <p class="authors">{authors.join(', ')}</p>
        <p class="timeline">{timeline}</p>
        <p class="technologies">{technologies.join(', ')}</p>
    </div>
    {
        previewImage && (
            <div class="preview-image">
                <img
                    src={previewImage}
                    aria-hidden="true"
                />
            </div>
        )
    }
</div>

<script>
    import { gsap } from 'gsap';

    const isOnMobile = window.matchMedia('(max-width: 768px)').matches;
    if (!isOnMobile) {
        const projectCards = document.querySelectorAll('.project-card') as NodeListOf<HTMLDivElement>;
        projectCards.forEach((card) => {
            const img = card.querySelector('.preview-image') as HTMLImageElement;
            if (!img) return;
            card.addEventListener('mouseenter', (e) => {
                gsap.to(img, { opacity: 1, duration: 0.2 });
            });
            card.addEventListener('mouseleave', () => {
                gsap.to(img, { opacity: 0, duration: 0.4 });
            });
            card.addEventListener('mousemove', (e) => {
                const x = e.layerX;
                const y = e.layerY;
                gsap.to(img, { x, y, duration: 0 });
            });
        });
    }
</script>

<style>
    .project-card {
        border-radius: 8px;
        padding: var(--spacing-md);
        border: 1px solid var(--color-text);
        max-width: 500px;
        display: flex;
        flex-direction: column;
        gap: var(--spacing-md);
        backdrop-filter: blur(10px);
        background-color: var(--color-background-transparent);
        margin-top: 10rem;
        position: relative;
    }

    .project-link {
        text-decoration: none;
        color: inherit;
    }

    .project-link h2 {
        margin: 0;
    }

    .authors,
    .technologies,
    .timeline {
        color: var(--color-text-secondary);
    }

    .preview-image {
        position: absolute;
        top: 0;
        left: 0;
        opacity: 0;
        pointer-events: none;
        user-select: none;
        border-radius: 0 var(--border-radius-full) var(--border-radius-full) var(--border-radius-full);
        overflow: clip;
        /* /* Fades out the edges of the image radially, but idk abt it.. */
        -webkit-mask-image: radial-gradient(circle, rgba(0, 0, 0, 1) 70%, rgba(0, 0, 0, 0) 95%);
        mask-image: radial-gradient(circle, rgba(0, 0, 0, 1) 70%, rgba(0, 0, 0, 0) 95%);

        img {
            width: 400px;
            height: 400px;
            object-fit: cover;
        }
    }
</style>
